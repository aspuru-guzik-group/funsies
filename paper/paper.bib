@misc{redis,
  author = {Redis Labs},
  title = {Redis},
  year = {2021},
  publisher = {GitHub},
  journal = {GitHub repository},
  url = {https://github.com/redis/redis}
}


@article{smith_psi4_2020,
	title = {{PSI}4 1.4: Open-source software for high-throughput quantum chemistry},
	volume = {152},
	issn = {0021-9606},
	url = {https://aip.scitation.org/doi/full/10.1063/5.0006002},
	doi = {10.1063/5.0006002},
	shorttitle = {{PSI}4 1.4},
	abstract = {{PSI}4 is a free and open-source ab initio electronic structure           program providing implementations of Hartree–Fock, density functional theory, many-body           perturbation theory, configuration interaction, density cumulant theory, symmetry-adapted           perturbation theory, and coupled-cluster theory. Most of the methods are quite efficient,           thanks to density fitting and multi-core parallelism. The program is a hybrid of C++ and           Python, and calculations may be run with very simple text files or using the Python {API},           facilitating post-processing and complex workflows; method developers also have access to           most of {PSI}4’s core functionalities via Python. Job specification may be passed           using The Molecular Sciences Software Institute ({MolSSI}) {QCSCHEMA} data format,           facilitating interoperability. A rewrite of our top-level computation driver, and           concomitant adoption of the {MolSSI} {QCARCHIVE} {INFRASTRUCTURE} project, makes the           latest version of {PSI}4 well suited to distributed computation of large numbers of           independent tasks. The project has fostered the development of independent software           components that may be reused in other quantum chemistry programs.},
	pages = {184108},
	number = {18},
	journaltitle = {J. Chem. Phys.},
	author = {Smith, Daniel G. A. and Burns, Lori A. and Simmonett, Andrew C. and Parrish, Robert M. and Schieber, Matthew C. and Galvelis, Raimondas and Kraus, Peter and Kruse, Holger and Di Remigio, Roberto and Alenaizan, Asem and James, Andrew M. and Lehtola, Susi and Misiewicz, Jonathon P. and Scheurer, Maximilian and Shaw, Robert A. and Schriber, Jeffrey B. and Xie, Yi and Glick, Zachary L. and Sirianni, Dominic A. and O’Brien, Joseph Senan and Waldrop, Jonathan M. and Kumar, Ashutosh and Hohenstein, Edward G. and Pritchard, Benjamin P. and Brooks, Bernard R. and Schaefer, Henry F. and Sokolov, Alexander Yu. and Patkowski, Konrad and {DePrince}, A. Eugene and Bozkaya, Uğur and King, Rollin A. and Evangelista, Francesco A. and Turney, Justin M. and Crawford, T. Daniel and Sherrill, C. David},
	urldate = {2021-04-20},
	date = {2020-05-13},
	note = {Publisher: American Institute of Physics},
	file = {Full Text PDF:C\:\\Users\\lavig\\Zotero\\storage\\MTUIKTYT\\Smith et al. - 2020 - PSI4 1.4 Open-source software for high-throughput.pdf:application/pdf;Snapshot:C\:\\Users\\lavig\\Zotero\\storage\\GKAQN446\\5.html:text/html}
}

@article{aquilante_modern_2020,
	title = {Modern quantum chemistry with [Open]Molcas},
	volume = {152},
	issn = {0021-9606},
	url = {https://aip.scitation.org/doi/full/10.1063/5.0004835},
	doi = {10.1063/5.0004835},
	abstract = {{MOLCAS}/{OpenMolcas} is an ab initio electronic structure program providing a large set of computational methods from Hartree–Fock and density functional theory to various implementations of multiconfigurational theory. This article provides a comprehensive overview of the main features of the code, specifically reviewing the use of the code in previously reported chemical applications as well as more recent applications including the calculation of magnetic properties from optimized density matrix renormalization group wave functions.},
	pages = {214117},
	number = {21},
	journaltitle = {J. Chem. Phys.},
	author = {Aquilante, Francesco and Autschbach, Jochen and Baiardi, Alberto and Battaglia, Stefano and Borin, Veniamin A. and Chibotaru, Liviu F. and Conti, Irene and De Vico, Luca and Delcey, Mickaël and Fdez. Galván, Ignacio and Ferré, Nicolas and Freitag, Leon and Garavelli, Marco and Gong, Xuejun and Knecht, Stefan and Larsson, Ernst D. and Lindh, Roland and Lundberg, Marcus and Malmqvist, Per Åke and Nenov, Artur and Norell, Jesper and Odelius, Michael and Olivucci, Massimo and Pedersen, Thomas B. and Pedraza-González, Laura and Phung, Quan M. and Pierloot, Kristine and Reiher, Markus and Schapiro, Igor and Segarra-Martí, Javier and Segatta, Francesco and Seijo, Luis and Sen, Saumik and Sergentu, Dumitru-Claudiu and Stein, Christopher J. and Ungur, Liviu and Vacher, Morgane and Valentini, Alessio and Veryazov, Valera},
	urldate = {2021-04-20},
	date = {2020-06-05},
	note = {Publisher: American Institute of Physics},
	file = {Full Text PDF:C\:\\Users\\lavig\\Zotero\\storage\\Q3YQDMH4\\Aquilante et al. - 2020 - Modern quantum chemistry with [Open]Molcas.pdf:application/pdf}
}

@article{kuhne_cp2k_2020,
	title = {{CP}2K: An electronic structure and molecular dynamics software package - Quickstep: Efficient and accurate electronic structure calculations},
	volume = {152},
	issn = {0021-9606},
	url = {https://aip.scitation.org/doi/full/10.1063/5.0007045},
	doi = {10.1063/5.0007045},
	shorttitle = {{CP}2K},
	abstract = {{CP}2K is an open source electronic structure and molecular dynamics software package to perform atomistic simulations of solid-state, liquid, molecular, and biological systems. It is especially aimed at massively parallel and linear-scaling electronic structure methods and state-of-the-art ab initio molecular dynamics simulations. Excellent performance for electronic structure calculations is achieved using novel algorithms implemented for modern high-performance computing systems. This review revisits the main capabilities of {CP}2K to perform efficient and accurate electronic structure simulations. The emphasis is put on density functional theory and multiple post–Hartree–Fock methods using the Gaussian and plane wave approach and its augmented all-electron extension.},
	pages = {194103},
	number = {19},
	journaltitle = {J. Chem. Phys.},
	author = {Kühne, Thomas D. and Iannuzzi, Marcella and Del Ben, Mauro and Rybkin, Vladimir V. and Seewald, Patrick and Stein, Frederick and Laino, Teodoro and Khaliullin, Rustam Z. and Schütt, Ole and Schiffmann, Florian and Golze, Dorothea and Wilhelm, Jan and Chulkov, Sergey and Bani-Hashemian, Mohammad Hossein and Weber, Valéry and Borštnik, Urban and Taillefumier, Mathieu and Jakobovits, Alice Shoshana and Lazzaro, Alfio and Pabst, Hans and Müller, Tiziano and Schade, Robert and Guidon, Manuel and Andermatt, Samuel and Holmberg, Nico and Schenter, Gregory K. and Hehn, Anna and Bussy, Augustin and Belleflamme, Fabian and Tabacchi, Gloria and Glöß, Andreas and Lass, Michael and Bethune, Iain and Mundy, Christopher J. and Plessl, Christian and Watkins, Matt and {VandeVondele}, Joost and Krack, Matthias and Hutter, Jürg},
	urldate = {2021-04-20},
	date = {2020-05-19},
	note = {Publisher: American Institute of Physics},
	file = {Full Text PDF:C\:\\Users\\lavig\\Zotero\\storage\\QLWE2P5D\\Kühne et al. - 2020 - CP2K An electronic structure and molecular dynami.pdf:application/pdf}
}

@article{apra_nwchem_2020,
	title = {{NWChem}: Past, present, and future},
	volume = {152},
	issn = {0021-9606},
	url = {https://aip.scitation.org/doi/full/10.1063/5.0004997},
	doi = {10.1063/5.0004997},
	shorttitle = {{NWChem}},
	abstract = {Specialized computational chemistry packages have permanently reshaped the landscape of chemical and materials science by providing tools to support and guide experimental efforts and for the prediction of atomistic and electronic properties. In this regard, electronic structure packages have played a special role by using first-principle-driven methodologies to model complex chemical and materials processes. Over the past few decades, the rapid development of computing technologies and the tremendous increase in computational power have offered a unique chance to study complex transformations using sophisticated and predictive many-body techniques that describe correlated behavior of electrons in molecular and condensed phase systems at different levels of theory. In enabling these simulations, novel parallel algorithms have been able to take advantage of computational resources to address the polynomial scaling of electronic structure methods. In this paper, we briefly review the {NWChem} computational chemistry suite, including its history, design principles, parallel tools, current capabilities, outreach, and outlook.},
	pages = {184102},
	number = {18},
	journaltitle = {J. Chem. Phys.},
	author = {Aprà, E. and Bylaska, E. J. and de Jong, W. A. and Govind, N. and Kowalski, K. and Straatsma, T. P. and Valiev, M. and van Dam, H. J. J. and Alexeev, Y. and Anchell, J. and Anisimov, V. and Aquino, F. W. and Atta-Fynn, R. and Autschbach, J. and Bauman, N. P. and Becca, J. C. and Bernholdt, D. E. and Bhaskaran-Nair, K. and Bogatko, S. and Borowski, P. and Boschen, J. and Brabec, J. and Bruner, A. and Cauët, E. and Chen, Y. and Chuev, G. N. and Cramer, C. J. and Daily, J. and Deegan, M. J. O. and Dunning, T. H. and Dupuis, M. and Dyall, K. G. and Fann, G. I. and Fischer, S. A. and Fonari, A. and Früchtl, H. and Gagliardi, L. and Garza, J. and Gawande, N. and Ghosh, S. and Glaesemann, K. and Götz, A. W. and Hammond, J. and Helms, V. and Hermes, E. D. and Hirao, K. and Hirata, S. and Jacquelin, M. and Jensen, L. and Johnson, B. G. and Jónsson, H. and Kendall, R. A. and Klemm, M. and Kobayashi, R. and Konkov, V. and Krishnamoorthy, S. and Krishnan, M. and Lin, Z. and Lins, R. D. and Littlefield, R. J. and Logsdail, A. J. and Lopata, K. and Ma, W. and Marenich, A. V. and Martin del Campo, J. and Mejia-Rodriguez, D. and Moore, J. E. and Mullin, J. M. and Nakajima, T. and Nascimento, D. R. and Nichols, J. A. and Nichols, P. J. and Nieplocha, J. and Otero-de-la-Roza, A. and Palmer, B. and Panyala, A. and Pirojsirikul, T. and Peng, B. and Peverati, R. and Pittner, J. and Pollack, L. and Richard, R. M. and Sadayappan, P. and Schatz, G. C. and Shelton, W. A. and Silverstein, D. W. and Smith, D. M. A. and Soares, T. A. and Song, D. and Swart, M. and Taylor, H. L. and Thomas, G. S. and Tipparaju, V. and Truhlar, D. G. and Tsemekhman, K. and Van Voorhis, T. and Vázquez-Mayagoitia, Á. and Verma, P. and Villa, O. and Vishnu, A. and Vogiatzis, K. D. and Wang, D. and Weare, J. H. and Williamson, M. J. and Windus, T. L. and Woliński, K. and Wong, A. T. and Wu, Q. and Yang, C. and Yu, Q. and Zacharias, M. and Zhang, Z. and Zhao, Y. and Harrison, R. J.},
	urldate = {2021-04-20},
	date = {2020-05-11},
	note = {Publisher: American Institute of Physics},
	file = {Full Text PDF:C\:\\Users\\lavig\\Zotero\\storage\\7BH6FTZA\\Aprà et al. - 2020 - NWChem Past, present, and future.pdf:application/pdf}
}

@article{barca_recent_2020,
	title = {Recent developments in the general atomic and molecular electronic structure system},
	volume = {152},
	issn = {0021-9606},
	url = {https://aip.scitation.org/doi/full/10.1063/5.0005188},
	doi = {10.1063/5.0005188},
	abstract = {A discussion of many of the recently implemented features of {GAMESS} (General Atomic and Molecular Electronic Structure System) and {LibCChem} (the C++ {CPU}/{GPU} library associated with {GAMESS}) is presented. These features include fragmentation methods such as the fragment molecular orbital, effective fragment potential and effective fragment molecular orbital methods, hybrid {MPI}/{OpenMP} approaches to Hartree–Fock, and resolution of the identity second order perturbation theory. Many new coupled cluster theory methods have been implemented in {GAMESS}, as have multiple levels of density functional/tight binding theory. The role of accelerators, especially graphical processing units, is discussed in the context of the new features of {LibCChem}, as it is the associated problem of power consumption as the power of computers increases dramatically. The process by which a complex program suite such as {GAMESS} is maintained and developed is considered. Future developments are briefly summarized.},
	pages = {154102},
	number = {15},
	journaltitle = {J. Chem. Phys.},
	author = {Barca, Giuseppe M. J. and Bertoni, Colleen and Carrington, Laura and Datta, Dipayan and De Silva, Nuwan and Deustua, J. Emiliano and Fedorov, Dmitri G. and Gour, Jeffrey R. and Gunina, Anastasia O. and Guidez, Emilie and Harville, Taylor and Irle, Stephan and Ivanic, Joe and Kowalski, Karol and Leang, Sarom S. and Li, Hui and Li, Wei and Lutz, Jesse J. and Magoulas, Ilias and Mato, Joani and Mironov, Vladimir and Nakata, Hiroya and Pham, Buu Q. and Piecuch, Piotr and Poole, David and Pruitt, Spencer R. and Rendell, Alistair P. and Roskop, Luke B. and Ruedenberg, Klaus and Sattasathuchana, Tosaporn and Schmidt, Michael W. and Shen, Jun and Slipchenko, Lyudmila and Sosonkina, Masha and Sundriyal, Vaibhav and Tiwari, Ananta and Galvez Vallejo, Jorge L. and Westheimer, Bryce and Włoch, Marta and Xu, Peng and Zahariev, Federico and Gordon, Mark S.},
	urldate = {2021-04-20},
	date = {2020-04-16},
	note = {Publisher: American Institute of Physics},
	file = {Full Text PDF:C\:\\Users\\lavig\\Zotero\\storage\\CAN6ZQLD\\Barca et al. - 2020 - Recent developments in the general atomic and mole.pdf:application/pdf}
}

@article{romero_abinit_2020,
	title = {{ABINIT}: Overview and focus on selected capabilities},
	volume = {152},
	issn = {0021-9606},
	url = {https://aip.scitation.org/doi/full/10.1063/1.5144261},
	doi = {10.1063/1.5144261},
	shorttitle = {{ABINIT}},
	abstract = {abinit is probably the first electronic-structure package to have been released under an open-source license about 20 years ago. It implements density functional theory, density-functional perturbation theory ({DFPT}), many-body perturbation theory ({GW} approximation and Bethe–Salpeter equation), and more specific or advanced formalisms, such as dynamical mean-field theory ({DMFT}) and the “temperature-dependent effective potential” approach for anharmonic effects. Relying on planewaves for the representation of wavefunctions, density, and other space-dependent quantities, with pseudopotentials or projector-augmented waves ({PAWs}), it is well suited for the study of periodic materials, although nanostructures and molecules can be treated with the supercell technique. The present article starts with a brief description of the project, a summary of the theories upon which abinit relies, and a list of the associated capabilities. It then focuses on selected capabilities that might not be present in the majority of electronic structure packages either among planewave codes or, in general, treatment of strongly correlated materials using {DMFT}; materials under finite electric fields; properties at nuclei (electric field gradient, Mössbauer shifts, and orbital magnetization); positron annihilation; Raman intensities and electro-optic effect; and {DFPT} calculations of response to strain perturbation (elastic constants and piezoelectricity), spatial dispersion (flexoelectricity), electronic mobility, temperature dependence of the gap, and spin-magnetic-field perturbation. The abinit {DFPT} implementation is very general, including systems with van der Waals interaction or with noncollinear magnetism. Community projects are also described: generation of pseudopotential and {PAW} datasets, high-throughput calculations (databases of phonon band structure, second-harmonic generation, and {GW} computations of bandgaps), and the library libpaw. abinit has strong links with many other software projects that are briefly mentioned.},
	pages = {124102},
	number = {12},
	journaltitle = {J. Chem. Phys.},
	author = {Romero, Aldo H. and Allan, Douglas C. and Amadon, Bernard and Antonius, Gabriel and Applencourt, Thomas and Baguet, Lucas and Bieder, Jordan and Bottin, François and Bouchet, Johann and Bousquet, Eric and Bruneval, Fabien and Brunin, Guillaume and Caliste, Damien and Côté, Michel and Denier, Jules and Dreyer, Cyrus and Ghosez, Philippe and Giantomassi, Matteo and Gillet, Yannick and Gingras, Olivier and Hamann, Donald R. and Hautier, Geoffroy and Jollet, François and Jomard, Gérald and Martin, Alexandre and Miranda, Henrique P. C. and Naccarato, Francesco and Petretto, Guido and Pike, Nicholas A. and Planes, Valentin and Prokhorenko, Sergei and Rangel, Tonatiuh and Ricci, Fabio and Rignanese, Gian-Marco and Royo, Miquel and Stengel, Massimiliano and Torrent, Marc and van Setten, Michiel J. and Van Troeye, Benoit and Verstraete, Matthieu J. and Wiktor, Julia and Zwanziger, Josef W. and Gonze, Xavier},
	urldate = {2021-04-20},
	date = {2020-03-24},
	note = {Publisher: American Institute of Physics},
	file = {Full Text PDF:C\:\\Users\\lavig\\Zotero\\storage\\IZN8SJ85\\Romero et al. - 2020 - ABINIT Overview and focus on selected capabilitie.pdf:application/pdf;Snapshot:C\:\\Users\\lavig\\Zotero\\storage\\TBVLE5QZ\\1.html:text/html}
}

@article{pollice_organic_2021,
	title = {Organic molecules with inverted gaps between first excited singlet and triplet states and appreciable fluorescence rates},
	volume = {0},
	issn = {2590-2393, 2590-2385},
	url = {https://www.cell.com/matter/abstract/S2590-2385(21)00072-2},
	doi = {10.1016/j.matt.2021.02.017},
	number = {0},
	journaltitle = {Matter},
	author = {Pollice, Robert and Friederich, Pascal and Lavigne, Cyrille and Gomes, Gabriel dos Passos and Aspuru-Guzik, Alán},
	urldate = {2021-04-20},
	date = {2021-03-17},
	note = {Publisher: Elsevier},
	keywords = {azaphenalenes, double excitations, excited states, high-throughput virtual screening, Hund's first rule, inverted singlet-triplet gaps, {MAP}2: Benchmark, multiobjective optimization, organic electronic materials, organic light-emitting diodes, spin polarization},
	file = {Submitted Version:C\:\\Users\\lavig\\Zotero\\storage\\6JI3VXWZ\\Pollice et al. - 2021 - Organic molecules with inverted gaps between first.pdf:application/pdf;Snapshot:C\:\\Users\\lavig\\Zotero\\storage\\TEKTBE8U\\S2590-2385(21)00072-2.html:text/html}
}

@online{noauthor_bash_nodate,
	title = {Bash Strict Mode},
	url = {http://redsymbol.net/articles/unofficial-bash-strict-mode/},
	urldate = {2021-04-20},
	file = {Bash Strict Mode:C\:\\Users\\lavig\\Zotero\\storage\\3ZCZLLX3\\unofficial-bash-strict-mode.html:text/html}
}

@article{weimer_exceptional_2008,
	title = {Exceptional situations and program reliability},
	volume = {30},
	issn = {0164-0925},
	url = {https://doi.org/10.1145/1330017.1330019},
	doi = {10.1145/1330017.1330019},
	abstract = {It is difficult to write programs that behave correctly in the presence of run-time errors. Proper behavior in the face of exceptional situations is important to the reliability of long-running programs. Existing programming language features often provide poor support for executing clean-up code and for restoring invariants. We present a data-flow analysis for finding a certain class of exception-handling defects: those related to a failure to release resources or to clean up properly along all paths. Many real-world programs violate such resource usage rules because of incorrect exception handling. Our flow-sensitive analysis keeps track of outstanding obligations along program paths and does a precise modeling of control flow in the presence of exceptions. Using it, we have found over 1,300 exception handling defects in over 5 million lines of Java code. Based on those defects we propose a programming language feature, the compensation stack, that keeps track of obligations at run time and ensures that they are discharged. We present a type system for compensation stacks that tracks collections of obligations. Finally, we present case studies to demonstrate that this feature is natural, efficient, and can improve reliability.},
	pages = {8:1--8:51},
	number = {2},
	journaltitle = {{ACM} Trans. Program. Lang. Syst.},
	author = {Weimer, Westley and Necula, George C.},
	urldate = {2021-04-20},
	date = {2008-03-14},
	keywords = {compensating transactions, Error handling, linear sagas, linear types, resource management},
	file = {Full Text PDF:C\:\\Users\\lavig\\Zotero\\storage\\2L3CLDZB\\Weimer and Necula - 2008 - Exceptional situations and program reliability.pdf:application/pdf}
}

@online{noauthor_redis_nodate,
	title = {Redis},
	url = {https://redis.io/},
	urldate = {2021-04-20},
	file = {Redis:C\:\\Users\\lavig\\Zotero\\storage\\HD5ZNPLX\\redis.io.html:text/html}
}

@article{maymounkov_koji_2018,
	title = {Koji: Automating pipelines with mixed-semantics data sources},
	url = {http://arxiv.org/abs/1901.01908},
	shorttitle = {Koji},
	abstract = {We propose a new result-oriented semantic for de ning data processing work ows that manipulate data in di erent semantic forms ( les or services) in a uni ed manner. is approach enables users to de ne work ows for a vast variety of reproducible data-processing tasks in a simple declarative manner which focuses on applicationlevel results, while automating all control-plane considerations (like failure recovery without loss of progress and computation reuse) behind the scenes.},
	journaltitle = {{arXiv}:1901.01908 [cs]},
	author = {Maymounkov, Petar},
	urldate = {2021-04-20},
	date = {2018-12-02},
	langid = {english},
	eprinttype = {arxiv},
	eprint = {1901.01908},
	keywords = {Computer Science - Distributed, Parallel, and Cluster Computing},
	file = {Maymounkov - 2018 - Koji Automating pipelines with mixed-semantics da.pdf:C\:\\Users\\lavig\\Zotero\\storage\\4DBBWUN7\\Maymounkov - 2018 - Koji Automating pipelines with mixed-semantics da.pdf:application/pdf}
}

@article{koster_snakemakescalable_2012,
	title = {Snakemake—a scalable bioinformatics workflow engine},
	volume = {28},
	issn = {1367-4803},
	url = {https://doi.org/10.1093/bioinformatics/bts480},
	doi = {10.1093/bioinformatics/bts480},
	abstract = {Summary: Snakemake is a workflow engine that provides a readable Python-based workflow definition language and a powerful execution environment that scales from single-core workstations to compute clusters without modifying the workflow. It is the first system to support the use of automatically inferred multiple named wildcards (or variables) in input and output filenames.Availability:http://snakemake.googlecode.com.Contact:johannes.koester@uni-due.de},
	pages = {2520--2522},
	number = {19},
	journaltitle = {Bioinformatics},
	author = {Köster, Johannes and Rahmann, Sven},
	urldate = {2021-04-20},
	date = {2012-10-01},
	file = {Full Text PDF:C\:\\Users\\lavig\\Zotero\\storage\\WZ6RUA2J\\Köster and Rahmann - 2012 - Snakemake—a scalable bioinformatics workflow engin.pdf:application/pdf;Snapshot:C\:\\Users\\lavig\\Zotero\\storage\\9RDV7T7Z\\290322.html:text/html}
}

@online{noauthor_apache_nodate,
	title = {Apache Airflow},
	url = {/},
	abstract = {Platform created by the community to programmatically author, schedule and monitor workflows.},
	titleaddon = {Apache Airflow},
	urldate = {2021-04-20},
	langid = {english},
	file = {Snapshot:C\:\\Users\\lavig\\Zotero\\storage\\ZQHRRF8E\\airflow.apache.org.html:text/html}
}

@online{noauthor_cadence_nodate,
	title = {Cadence},
	url = {https://cadenceworkflow.io/},
	urldate = {2021-04-20},
	file = {Cadence:C\:\\Users\\lavig\\Zotero\\storage\\8XQPAQJN\\cadenceworkflow.io.html:text/html}
}

@article{mlder_sustainable_2021,
	title = {Sustainable data analysis with Snakemake [version 2; peer review: 1 approved, 1 approved with reservations]},
	volume = {10},
	doi = {10.12688/f1000research.29032.2},
	number = {33},
	journaltitle = {F1000Research},
	author = {M�lder, F and Jablonski, {KP} and Letcher, B and Hall, {MB} and Tomkins-Tinch, {CH} and Sochat, V and Forster, J and Lee, S and Twardziok, {SO} and Kanitz, A and Wilm, A and Holtgrewe, M and Rahmann, S and Nahnsen, S and K�ster, J},
	date = {2021}
}

@inproceedings{gamblin_spack_2015,
	title = {The Spack package manager: bringing order to {HPC} software chaos},
	isbn = {978-1-4503-3723-6},
	url = {https://www.computer.org/csdl/proceedings-article/sc/2015/2807623/12OmNBf94Xq},
	doi = {10.1145/2807591.2807623},
	shorttitle = {The Spack package manager},
	abstract = {Large {HPC} centers spend considerable time supporting software for thousands of users, but the complexity of {HPC} software is quickly outpacing the capabilities of existing software management tools. Scientific applications require specific versions of compilers, {MPI}, and other dependency libraries, so using a single, standard software stack is infeasible. However, managing many configurations is difficult because the configuration space is combinatorial in size. We introduce Spack, a tool used at Lawrence Livermore National Laboratory to manage this complexity. Spack provides a novel, recursive specification syntax to invoke parametric builds of packages and dependencies. It allows any number of builds to coexist on the same system, and it ensures that installed packages can find their dependencies, regardless of the environment. We show through real-world use cases that Spack supports diverse and demanding applications, bringing order to {HPC} software chaos.},
	eventtitle = {{SC}15: International Conference for High-Performance Computing, Networking, Storage and Analysis},
	pages = {1--12},
	publisher = {{IEEE} Computer Society},
	author = {Gamblin, Todd and {LeGendre}, Matthew and Collette, Michael R. and Lee, Gregory L. and Moody, Adam and Supinski, Bronis R. de and Futral, Scott},
	urldate = {2021-04-20},
	date = {2015-11-01},
	note = {{ISSN}: 2167-4337},
	file = {Snapshot:C\:\\Users\\lavig\\Zotero\\storage\\2PZTJM4M\\12OmNBf94Xq.html:text/html}
}

@article{dolstra_nix_2004,
	title = {Nix: A Safe and Policy-Free System for Software Deployment},
	abstract = {Existing systems for software deployment are neither safe nor sufficiently flexible. Primary safety issues are the inability to enforce reliable specification of component dependencies, and the lack of support for multiple versions or variants of a component. This renders deployment operations such as upgrading or deleting components dangerous and unpredictable. A deployment system must also be flexible (i.e., policy-free) enough to support both centralised and local package management, and to allow a variety of mechanisms for transferring components. In this paper we present Nix, a deployment system that addresses these issues through a simple technique of using cryptographic hashes to compute unique paths for component instances.},
	pages = {14},
	author = {Dolstra, Eelco and de Jonge, Merijn and Visser, Eelco},
	date = {2004},
	langid = {english},
	file = {Dolstra et al. - 2004 - Nix A Safe and Policy-Free System for Software De.pdf:C\:\\Users\\lavig\\Zotero\\storage\\FMUQWH4R\\Dolstra et al. - 2004 - Nix A Safe and Policy-Free System for Software De.pdf:application/pdf}
}

@book{klabnik_rust_2019,
	title = {The Rust Programming Language (Covers Rust 2018)},
	isbn = {978-1-71850-044-0},
	abstract = {The official book on the Rust programming language, written by the Rust development team at the Mozilla Foundation, fully updated for Rust 2018. The Rust Programming Language is the official book on Rust: an open source systems programming language that helps you write faster, more reliable software. Rust offers control over low-level details (such as memory usage) in combination with high-level ergonomics, eliminating the hassle traditionally associated with low-level languages. The authors of The Rust Programming Language, members of the Rust Core Team, share their knowledge and experience to show you how to take full advantage of Rust's features--from installation to creating robust and scalable programs. You'll begin with basics like creating functions, choosing data types, and binding variables and then move on to more advanced concepts, such as:  - Ownership and borrowing, lifetimes, and traits - Using Rust's memory safety guarantees to build fast, safe programs - Testing, error handling, and effective refactoring - Generics, smart pointers, multithreading, trait objects, and advanced pattern matching - Using Cargo, Rust's built-in package manager, to build, test, and document your code and manage dependencies - How best to use Rust's advanced compiler with compiler-led programming techniques You'll find plenty of code examples throughout the book, as well as three chapters dedicated to building complete projects to test your learning: a number guessing game, a Rust implementation of a command line tool, and a multithreaded server. New to this edition: An extended section on Rust macros, an expanded chapter on modules, and appendixes on Rust development tools and editions.},
	pagetotal = {561},
	publisher = {No Starch Press},
	author = {Klabnik, Steve and Nichols, Carol},
	date = {2019-08-06},
	langid = {english},
	note = {Google-Books-{ID}: 0Vv6DwAAQBAJ},
	keywords = {Computers / Programming / Open Source}
}

@book{chacon_pro_2014,
	title = {Pro Git},
	isbn = {978-1-4842-0076-6},
	abstract = {Pro Git (Second Edition) is your fully-updated guide to Git and its usage in the modern world. Git has come a long way since it was first developed by Linus Torvalds for Linux kernel development. It has taken the open source world by storm since its inception in 2005, and this book teaches you how to use it like a pro. Effective and well-implemented version control is a necessity for successful web projects, whether large or small. With this book you’ll learn how to master the world of distributed version workflow, use the distributed features of Git to the full, and extend Git to meet your every need. Written by Git pros Scott Chacon and Ben Straub, Pro Git (Second Edition) builds on the hugely successful first edition, and is now fully updated for Git version 2.0, as well as including an indispensable chapter on {GitHub}. It’s the best book for all your Git needs.},
	pagetotal = {441},
	publisher = {Apress},
	author = {Chacon, Scott and Straub, Ben},
	date = {2014-11-18},
	langid = {english},
	note = {Google-Books-{ID}: {jVYnCgAAQBAJ}},
	keywords = {Computers / Programming / Open Source, Computers / Information Technology, Computers / Programming / General, Computers / Software Development \& Engineering / General}
}

@online{noauthor_aspuru-guzik-groupfunsies-recipes_nodate,
	title = {aspuru-guzik-group/funsies-recipes},
	url = {https://github.com/aspuru-guzik-group/funsies-recipes},
	abstract = {Contribute to aspuru-guzik-group/funsies-recipes development by creating an account on {GitHub}.},
	titleaddon = {{GitHub}},
	urldate = {2021-04-20},
	langid = {english},
	file = {Snapshot:C\:\\Users\\lavig\\Zotero\\storage\\UPEK5Y3R\\funsies-recipes.html:text/html}
}

@inproceedings{yoo_slurm_2003,
	location = {Berlin, Heidelberg},
	title = {{SLURM}: Simple Linux Utility for Resource Management},
	isbn = {978-3-540-39727-4},
	doi = {10.1007/10968987_3},
	series = {Lecture Notes in Computer Science},
	shorttitle = {{SLURM}},
	abstract = {A new cluster resource management system called Simple Linux Utility Resource Management ({SLURM}) is described in this paper. {SLURM}, initially developed for large Linux clusters at the Lawrence Livermore National Laboratory ({LLNL}), is a simple cluster manager that can scale to thousands of processors. {SLURM} is designed to be flexible and fault-tolerant and can be ported to other clusters of different size and architecture with minimal effort. We are certain that {SLURM} will benefit both users and system architects by providing them with a simple, robust, and highly scalable parallel job execution environment for their cluster system.},
	pages = {44--60},
	booktitle = {Job Scheduling Strategies for Parallel Processing},
	publisher = {Springer},
	author = {Yoo, Andy B. and Jette, Morris A. and Grondona, Mark},
	editor = {Feitelson, Dror and Rudolph, Larry and Schwiegelshohn, Uwe},
	date = {2003},
	langid = {english},
	keywords = {Exit Status, Lawrence Livermore National Laboratory, Message Authentication Code, Remote Execution, Resource Management System},
	file = {Springer Full Text PDF:C\:\\Users\\lavig\\Zotero\\storage\\ITSLILJZ\\Yoo et al. - 2003 - SLURM Simple Linux Utility for Resource Managemen.pdf:application/pdf}
}

@inproceedings{stevens_first_2017,
	location = {Cham},
	title = {The First Collision for Full {SHA}-1},
	isbn = {978-3-319-63688-7},
	doi = {10.1007/978-3-319-63688-7_19},
	series = {Lecture Notes in Computer Science},
	abstract = {{SHA}-1 is a widely used 1995 {NIST} cryptographic hash function standard that was officially deprecated by {NIST} in 2011 due to fundamental security weaknesses demonstrated in various analyses and theoretical attacks.Despite its deprecation, {SHA}-1 remains widely used in 2017 for document and {TLS} certificate signatures, and also in many software such as the {GIT} versioning system for integrity and backup purposes.A key reason behind the reluctance of many industry players to replace {SHA}-1 with a safer alternative is the fact that finding an actual collision has seemed to be impractical for the past eleven years due to the high complexity and computational cost of the attack.In this paper, we demonstrate that {SHA}-1 collision attacks have finally become practical by providing the first known instance of a collision. Furthermore, the prefix of the colliding messages was carefully chosen so that they allow an attacker to forge two distinct {PDF} documents with the same {SHA}-1 hash that display different arbitrarily-chosen visual contents.We were able to find this collision by combining many special cryptanalytic techniques in complex ways and improving upon previous work. In total the computational effort spent is equivalent to 263.1263.12{\textasciicircum}\{63.1\} calls to {SHA}-1’s compression function, and took approximately 6 500 {CPU} years and 100 {GPU} years. While the computational power spent on this collision is larger than other public cryptanalytic computations, it is still more than 100 000 times faster than a brute force search.},
	pages = {570--596},
	booktitle = {Advances in Cryptology – {CRYPTO} 2017},
	publisher = {Springer International Publishing},
	author = {Stevens, Marc and Bursztein, Elie and Karpman, Pierre and Albertini, Ange and Markov, Yarik},
	editor = {Katz, Jonathan and Shacham, Hovav},
	date = {2017},
	langid = {english},
	keywords = {Collision attack, Collision example, Cryptanalysis, Differential path construction, Hash function},
	file = {Springer Full Text PDF:C\:\\Users\\lavig\\Zotero\\storage\\G8K2593M\\Stevens et al. - 2017 - The First Collision for Full SHA-1.pdf:application/pdf}
}

@article{dean_mapreduce_2004,
	title = {{MapReduce}: Simpliﬁed Data Processing on Large Clusters},
	abstract = {{MapReduce} is a programming model and an associated implementation for processing and generating large data sets. Users specify a map function that processes a key/value pair to generate a set of intermediate key/value pairs, and a reduce function that merges all intermediate values associated with the same intermediate key. Many real world tasks are expressible in this model, as shown in the paper.},
	pages = {13},
	author = {Dean, Jeffrey and Ghemawat, Sanjay},
	date = {2004},
	langid = {english},
	file = {Dean and Ghemawat - 2004 - MapReduce Simpliﬁed Data Processing on Large Clus.pdf:C\:\\Users\\lavig\\Zotero\\storage\\6CXC6HY4\\Dean and Ghemawat - 2004 - MapReduce Simpliﬁed Data Processing on Large Clus.pdf:application/pdf}
}

@inproceedings{dean_mapreduce_2004-1,
	location = {San Francisco, {CA}},
	title = {{MapReduce}: Simplified Data Processing on Large Clusters},
	shorttitle = {{MapReduce}},
	pages = {137--150},
	booktitle = {{OSDI}'04: Sixth Symposium on Operating System Design and Implementation},
	author = {Dean, Jeffrey and Ghemawat, Sanjay},
	date = {2004},
	file = {Full Text PDF:C\:\\Users\\lavig\\Zotero\\storage\\6SPFGAX5\\Dean and Ghemawat - 2004 - MapReduce Simplified Data Processing on Large Clu.pdf:application/pdf}
}
